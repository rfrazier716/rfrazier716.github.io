<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fotonix &amp; Gizmo (Posts about adventures in ray tracing)</title><link>https://rfrazier716.github.io/</link><description></description><atom:link href="https://rfrazier716.github.io/categories/adventures-in-ray-tracing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:rfrazier716+site@gmail.com"&gt;Ryan Frazier&lt;/a&gt; </copyright><lastBuildDate>Sat, 20 Mar 2021 20:10:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Geometric Ray Tracing with Python</title><link>https://rfrazier716.github.io/posts/geometric-ray-tracing-with-python/</link><dc:creator>Ryan Frazier</dc:creator><description>&lt;div&gt;&lt;p&gt;Ray tracing is subset of programming that has always fascinated me. Every time you see a computer generated image, from video games to CAD software, ray tracing took place under the hood. The biggest hurdle I've always found with learning about ray tracers, though, is it's tightly coupled with graphics API's such as openGL and DirectX, and the actual algorithms are abstracted away from the user.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rfrazier716.github.io/posts/geometric-ray-tracing-with-python/"&gt; …&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>adventures in ray tracing</category><guid>https://rfrazier716.github.io/posts/geometric-ray-tracing-with-python/</guid><pubDate>Sat, 06 Mar 2021 21:51:24 GMT</pubDate></item></channel></rss>